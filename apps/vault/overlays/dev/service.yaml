# Source: vault/templates/injector-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hashicorp-vault-agent-injector-svc
  namespace: dev
  labels:
    app.kubernetes.io/name: vault-agent-injector
    app.kubernetes.io/instance: hashicorp-vault
    app.kubernetes.io/managed-by: Helm
  
spec:
  ports:
  - name: https
    port: 443
    targetPort: 8080
  selector:
    app.kubernetes.io/name: vault-agent-injector
    app.kubernetes.io/instance: hashicorp-vault
    component: webhook
---
# Source: vault/templates/server-headless-service.yaml
# Service for Vault cluster
apiVersion: v1
kind: Service
metadata:
  name: hashicorp-vault-internal
  namespace: dev
  labels:
    helm.sh/chart: vault-0.27.0
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: hashicorp-vault
    app.kubernetes.io/managed-by: Helm
    vault-internal: "true"
  annotations:

spec:
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: "http"
      port: 8200
      targetPort: 8200
    - name: https-internal
      port: 8201
      targetPort: 8201
  selector:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: hashicorp-vault
    component: server

---
# Source: vault/templates/server-service.yaml
# Service for Vault cluster
apiVersion: v1
kind: Service
metadata:
  name: hashicorp-vault
  namespace: dev
  labels:
    helm.sh/chart: vault-0.27.0
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: hashicorp-vault
    app.kubernetes.io/managed-by: Helm
  annotations:

spec:
  # We want the servers to become available even if they're not ready
  # since this DNS is also used for join operations.
  publishNotReadyAddresses: true
  ports:
    - name: http
      port: 8200
      targetPort: 8200
    - name: https-internal
      port: 8201
      targetPort: 8201
  selector:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: hashicorp-vault
    component: server